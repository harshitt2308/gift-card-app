{
  "version": 3,
  "sources": ["../../react-cursor-fx/src/Cursor.tsx"],
  "sourcesContent": ["import React, { useEffect, useRef } from 'react';\n\ninterface CursorProps {\n    type?: string;\n    size?: number;\n    imageUrl?: string;\n    targetElement?: React.RefObject<HTMLElement> | string;\n}\n\nconst isValidUrl = (url: string): boolean => {\n    try {\n        new URL(url, window.location.origin);\n        return true;\n    } catch (e) {\n        // console.warn('Invalid imageUrl provided:', url);\n        return false;\n    }\n};\n\nconst Cursor: React.FC<CursorProps> = ({ type = 'default', size = 20, imageUrl, targetElement }) => {\n    const defaultRef = useRef(document.body);\n    const previousStyle = useRef<string>(\"\"); // Stores the original style of the element\n\n    useEffect(() => {\n        let target: HTMLElement | null = null;\n\n        // Determine the target element\n        if (targetElement) {\n            if (typeof targetElement === \"string\") {\n                target = document.querySelector(targetElement) as HTMLElement | null;\n            } else if (targetElement.current) {\n                target = targetElement.current;\n            }\n        } else {\n            target = defaultRef.current; // Uses document.body as default\n        }\n\n        if (!target) {\n            // console.warn(\"Target element not found, skipping cursor application\");\n            return;\n        }\n\n        // Saves the element's original style before changing it\n        previousStyle.current = target.style.cursor || 'auto';\n\n        let cursorStyle = type;\n        if (type === \"custom\" && imageUrl) {\n            if (isValidUrl(imageUrl)) {\n                const resolvedUrl = new URL(imageUrl, window.location.origin).href;\n                cursorStyle = `url(${resolvedUrl}) ${size / 2} ${size / 2}, auto`;\n            } else {\n                // console.warn(\"Falling back to default cursor due to invalid imageUrl\");\n                cursorStyle = \"auto\";\n            }\n        }\n\n        // console.log(\"Applying cursor to:\", target, \"Style:\", cursorStyle);\n        target.style.cursor = cursorStyle;\n\n        // Cleanup: Restores the element's original style\n        return () => {\n            target.style.cursor = previousStyle.current;\n        };\n    }, [type, size, imageUrl, targetElement]);\n\n    return null;\n};\n\nexport default Cursor;\n"],
  "mappings": ";;;;;;;;;AASA,IAAM,aAAa,CAAC,QAAwB;AACxC,MAAI;AACA,QAAI,IAAI,KAAK,OAAO,SAAS,MAAM;AACnC,WAAO;WACF,GAAG;AAER,WAAO;;AAEf;AAEA,IAAM,SAAgC,CAAC,EAAE,OAAO,WAAW,OAAO,IAAI,UAAU,cAAa,MAAM;AAC/F,QAAM,iBAAa,qBAAO,SAAS,IAAI;AACvC,QAAM,oBAAgB,qBAAe,EAAE;AAEvC,8BAAU,MAAK;AACX,QAAI,SAA6B;AAGjC,QAAI,eAAe;AACf,UAAI,OAAO,kBAAkB,UAAU;AACnC,iBAAS,SAAS,cAAc,aAAa;iBACtC,cAAc,SAAS;AAC9B,iBAAS,cAAc;;WAExB;AACH,eAAS,WAAW;;AAGxB,QAAI,CAAC,QAAQ;AAET;;AAIJ,kBAAc,UAAU,OAAO,MAAM,UAAU;AAE/C,QAAI,cAAc;AAClB,QAAI,SAAS,YAAY,UAAU;AAC/B,UAAI,WAAW,QAAQ,GAAG;AACtB,cAAM,cAAc,IAAI,IAAI,UAAU,OAAO,SAAS,MAAM,EAAE;AAC9D,sBAAc,OAAO,WAAW,KAAK,OAAO,CAAC,IAAI,OAAO,CAAC;aACtD;AAEH,sBAAc;;;AAKtB,WAAO,MAAM,SAAS;AAGtB,WAAO,MAAK;AACR,aAAO,MAAM,SAAS,cAAc;IACxC;KACD,CAAC,MAAM,MAAM,UAAU,aAAa,CAAC;AAExC,SAAO;AACX;",
  "names": []
}
