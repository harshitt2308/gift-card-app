{"version":3,"file":"index.cjs.js","sources":["../src/Cursor.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\ninterface CursorProps {\n    type?: string;\n    size?: number;\n    imageUrl?: string;\n    targetElement?: React.RefObject<HTMLElement> | string;\n}\n\nconst isValidUrl = (url: string): boolean => {\n    try {\n        new URL(url, window.location.origin);\n        return true;\n    } catch (e) {\n        // console.warn('Invalid imageUrl provided:', url);\n        return false;\n    }\n};\n\nconst Cursor: React.FC<CursorProps> = ({ type = 'default', size = 20, imageUrl, targetElement }) => {\n    const defaultRef = useRef(document.body);\n    const previousStyle = useRef<string>(\"\"); // Stores the original style of the element\n\n    useEffect(() => {\n        let target: HTMLElement | null = null;\n\n        // Determine the target element\n        if (targetElement) {\n            if (typeof targetElement === \"string\") {\n                target = document.querySelector(targetElement) as HTMLElement | null;\n            } else if (targetElement.current) {\n                target = targetElement.current;\n            }\n        } else {\n            target = defaultRef.current; // Uses document.body as default\n        }\n\n        if (!target) {\n            // console.warn(\"Target element not found, skipping cursor application\");\n            return;\n        }\n\n        // Saves the element's original style before changing it\n        previousStyle.current = target.style.cursor || 'auto';\n\n        let cursorStyle = type;\n        if (type === \"custom\" && imageUrl) {\n            if (isValidUrl(imageUrl)) {\n                const resolvedUrl = new URL(imageUrl, window.location.origin).href;\n                cursorStyle = `url(${resolvedUrl}) ${size / 2} ${size / 2}, auto`;\n            } else {\n                // console.warn(\"Falling back to default cursor due to invalid imageUrl\");\n                cursorStyle = \"auto\";\n            }\n        }\n\n        // console.log(\"Applying cursor to:\", target, \"Style:\", cursorStyle);\n        target.style.cursor = cursorStyle;\n\n        // Cleanup: Restores the element's original style\n        return () => {\n            target.style.cursor = previousStyle.current;\n        };\n    }, [type, size, imageUrl, targetElement]);\n\n    return null;\n};\n\nexport default Cursor;\n"],"names":["useRef","useEffect"],"mappings":";;;;AASA,MAAM,UAAU,GAAG,CAAC,GAAW,KAAa;AACxC,IAAA,IAAI;QACA,IAAI,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;AACpC,QAAA,OAAO,IAAI;;IACb,OAAO,CAAC,EAAE;;AAER,QAAA,OAAO,KAAK;;AAEpB,CAAC;AAED,MAAM,MAAM,GAA0B,CAAC,EAAE,IAAI,GAAG,SAAS,EAAE,IAAI,GAAG,EAAE,EAAE,QAAQ,EAAE,aAAa,EAAE,KAAI;IAC/F,MAAM,UAAU,GAAGA,YAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;IACxC,MAAM,aAAa,GAAGA,YAAM,CAAS,EAAE,CAAC,CAAC;IAEzCC,eAAS,CAAC,MAAK;QACX,IAAI,MAAM,GAAuB,IAAI;;QAGrC,IAAI,aAAa,EAAE;AACf,YAAA,IAAI,OAAO,aAAa,KAAK,QAAQ,EAAE;AACnC,gBAAA,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAuB;;AACjE,iBAAA,IAAI,aAAa,CAAC,OAAO,EAAE;AAC9B,gBAAA,MAAM,GAAG,aAAa,CAAC,OAAO;;;aAE/B;AACH,YAAA,MAAM,GAAG,UAAU,CAAC,OAAO,CAAC;;QAGhC,IAAI,CAAC,MAAM,EAAE;;YAET;;;QAIJ,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM;QAErD,IAAI,WAAW,GAAG,IAAI;AACtB,QAAA,IAAI,IAAI,KAAK,QAAQ,IAAI,QAAQ,EAAE;AAC/B,YAAA,IAAI,UAAU,CAAC,QAAQ,CAAC,EAAE;AACtB,gBAAA,MAAM,WAAW,GAAG,IAAI,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI;AAClE,gBAAA,WAAW,GAAG,CAAA,IAAA,EAAO,WAAW,CAAA,EAAA,EAAK,IAAI,GAAG,CAAC,CAAA,CAAA,EAAI,IAAI,GAAG,CAAC,CAAA,MAAA,CAAQ;;iBAC9D;;gBAEH,WAAW,GAAG,MAAM;;;;AAK5B,QAAA,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW;;AAGjC,QAAA,OAAO,MAAK;YACR,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa,CAAC,OAAO;AAC/C,SAAC;KACJ,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC;AAEzC,IAAA,OAAO,IAAI;AACf;;;;"}